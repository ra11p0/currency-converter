<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>